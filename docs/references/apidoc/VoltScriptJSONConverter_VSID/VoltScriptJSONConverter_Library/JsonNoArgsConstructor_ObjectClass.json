{"classname":"JsonNoArgsConstructor","comment":"Base implementation of AbstractJsonConstructor for empty constructors","valuetype":"JsonCustomConstructor","filenamebase":"JsonNoArgsConstructor_ObjectClass","fqnprefix":"VoltScriptJSONConverter","qn":"JsonNoArgsConstructor","codesample":"%REM\nThe following code is abbreviated code from JsonConversionHelper.toObject. It populates the mainContent property with an object of className using the class&amp;apos;s Sub New, which does not take any parameters.\n%END REM\nFunction toObject(source as JsonObject, className as String, libName as String) as JsonConversionHelper\n    Dim noArgsConstructor as New JsonNoArgsConstructor()\n    Set mainHolder.contents = noArgsConstructor.createObject(className, libName)\nEnd Function","signaturecode":3072,"instancecode":1024,"parentclassname":"JsonCustomConstructor","classtype":"Derived","classderivetype":"JsonCustomConstructor","projectid":"086680CD3A1F050280258935003E6DFD","version":3,"classid":"5F65C8DBC749A31A8025893500510B38","signature":"Public Class JsonNoArgsConstructor As JsonCustomConstructor","modifiers":"Public","classname":"JsonNoArgsConstructor","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Base implementation of AbstractJsonConstructor for empty constructors&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Base implementation of AbstractJsonConstructor for empty constructors","inlinecomment":" \t &apos; Base implementation of AbstractJsonConstructor for empty constructors","codesamplehtml":"%REM&lt;br /&gt;The following code is abbreviated code from JsonConversionHelper.toObject. It populates the mainContent property with an object of className using the class&amp;apos;s Sub New, which does not take any parameters.&lt;br /&gt;%END REM&lt;br /&gt;Function toObject(source as JsonObject, className as String, libName as String) as JsonConversionHelper&lt;br /&gt;    Dim noArgsConstructor as New JsonNoArgsConstructor()&lt;br /&gt;    Set mainHolder.contents = noArgsConstructor.createObject(className, libName)&lt;br /&gt;End Function", "methods":[{"label":"createObject","comment":"Overridden function","valuetype":"Variant","filenamebase":"createObject_Method","fqnprefix":"VoltScriptJSONConverter.JsonNoArgsConstructor","qn":"createObject","codesample":"%REM\nThe following code is abbreviated code from JsonConversionHelper.toObject. It populates the mainContent property with an object of className using the class&amp;apos;s Sub New, which does not take any parameters.\n%END REM\nFunction toObject(source as JsonObject, className as String, libName as String) as JsonConversionHelper\n    Dim noArgsConstructor as New JsonNoArgsConstructor()\n    Set mainHolder.contents = noArgsConstructor.createObject(className, libName)\nEnd Function","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(className As String, libName As String)","signature":"Public Function createObject(className As String, libName As String) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overridden function&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overridden function","inlinecomment":" \t &apos; Overridden function","parentclassname":"JsonNoArgsConstructor","codesamplehtml":"%REM&lt;br /&gt;The following code is abbreviated code from JsonConversionHelper.toObject. It populates the mainContent property with an object of className using the class&amp;apos;s Sub New, which does not take any parameters.&lt;br /&gt;%END REM&lt;br /&gt;Function toObject(source as JsonObject, className as String, libName as String) as JsonConversionHelper&lt;br /&gt;    Dim noArgsConstructor as New JsonNoArgsConstructor()&lt;br /&gt;    Set mainHolder.contents = noArgsConstructor.createObject(className, libName)&lt;br /&gt;End Function", "signatureelements":["Public","Function"], "arguments":[{"label":"className","comment":"Class to create an instance of","valuetype":"String","filenamebase":"className_ValuedElement","fqnprefix":"VoltScriptJSONConverterJsonNoArgsConstructorcreateObject","qn":"className","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Class to create an instance of&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Class to create an instance of","inlinecomment":" \t &apos; Class to create an instance of"},{"label":"libName","comment":"Script file where the class is defined","valuetype":"String","filenamebase":"libName_ValuedElement","fqnprefix":"VoltScriptJSONConverterJsonNoArgsConstructorcreateObject","qn":"libName","argumentindex":2,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Script file where the class is defined&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Script file where the class is defined","inlinecomment":" \t &apos; Script file where the class is defined"}]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptJSONConverter.JsonNoArgsConstructor","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"JsonNoArgsConstructor","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
