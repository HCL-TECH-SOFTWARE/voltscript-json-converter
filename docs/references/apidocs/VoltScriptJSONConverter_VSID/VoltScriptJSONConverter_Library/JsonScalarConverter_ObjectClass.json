{"classname":"JsonScalarConverter","comment":"Cusom Converter to convert a JSON value to VoltScript scalar. This is used as the default for any conversion.","valuetype":"AbstractJsonConverter","filenamebase":"JsonScalarConverter_ObjectClass","fqnprefix":"VoltScriptJSONConverter","qn":"JsonScalarConverter","codesample":"%REM\nThe following code is used in ser-10.txt. Converts to strings and numerics for firstName, lastName and age.\n%END REM\nDim json as String\nDim helper as New JsonConversionHelper()\nDim jd as New Person()\njd.firstName = &amp;quot;John&amp;quot;\njd.lastName = &amp;quot;Doe&amp;quot;\njd.age = 42\njson = helper.withScalarConverter(&amp;quot;firstName&amp;quot;)._\n    withScalarConverter(&amp;quot;lastName&amp;quot;)._\n    withScalarConverter(&amp;quot;age&amp;quot;)\n    toJsonString(jd, false)","signaturecode":3072,"instancecode":1024,"parentclassname":"AbstractJsonConverter","classtype":"Derived","classderivetype":"AbstractJsonConverter","projectid":"086680CD3A1F050280258935003E6DFD","version":3,"classid":"B724066E5F04247780258935004512DC","signature":"Public Class JsonScalarConverter As AbstractJsonConverter","modifiers":"Public","classname":"JsonScalarConverter","constructorsignature":"Public Sub New()","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Cusom Converter to convert a JSON value to VoltScript scalar. This is used as the default for any conversion.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Cusom Converter to convert a JSON value to VoltScript scalar. This is used as the default for any conversion.","inlinecomment":" \t &apos; Cusom Converter to convert a JSON value to VoltScript scalar. This is used as the default for any conversion.","codesamplehtml":"%REM&lt;br /&gt;The following code is used in ser-10.txt. Converts to strings and numerics for firstName, lastName and age.&lt;br /&gt;%END REM&lt;br /&gt;Dim json as String&lt;br /&gt;Dim helper as New JsonConversionHelper()&lt;br /&gt;Dim jd as New Person()&lt;br /&gt;jd.firstName = &amp;quot;John&amp;quot;&lt;br /&gt;jd.lastName = &amp;quot;Doe&amp;quot;&lt;br /&gt;jd.age = 42&lt;br /&gt;json = helper.withScalarConverter(&amp;quot;firstName&amp;quot;)._&lt;br /&gt;    withScalarConverter(&amp;quot;lastName&amp;quot;)._&lt;br /&gt;    withScalarConverter(&amp;quot;age&amp;quot;)&lt;br /&gt;    toJsonString(jd, false)", "methods":[{"label":"fromJson","comment":"Overridden function, uses scalar value from JSON object. The fromJson method is called from AbstractJsonConverter&amp;apos;s deserialize method.","valuetype":"Variant","filenamebase":"fromJson_Method","fqnprefix":"VoltScriptJSONConverter.JsonScalarConverter","qn":"fromJson","codesample":"%REM\nThe following code is an abbreviated version of code in AbstractJsonConverter.deserialize. It calls the derived class&amp;apos;s fromJson function and passes the result to AbstractJsonConverter.deserializeToProperty\n%END REM\nSub deserialize(holder as JsonConversionHolder, source as JsonObject)\n   Call deserializeToProperty(holder, fromJson(source), source.label)\nEnd Sub","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As JsonObject)","signature":"Public Function fromJson(source As JsonObject) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overridden function, uses scalar value from JSON object. The fromJson method is called from AbstractJsonConverter&amp;apos;s deserialize method.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overridden function, uses scalar value from JSON object. The fromJson method is called from AbstractJsonConverter&amp;apos;s deserialize method.","inlinecomment":" \t &apos; Overridden function, uses scalar value from JSON object. The fromJson method is called from AbstractJsonConverter&amp;apos;s deserialize method.","parentclassname":"JsonScalarConverter","codesamplehtml":"%REM&lt;br /&gt;The following code is an abbreviated version of code in AbstractJsonConverter.deserialize. It calls the derived class&amp;apos;s fromJson function and passes the result to AbstractJsonConverter.deserializeToProperty&lt;br /&gt;%END REM&lt;br /&gt;Sub deserialize(holder as JsonConversionHolder, source as JsonObject)&lt;br /&gt;   Call deserializeToProperty(holder, fromJson(source), source.label)&lt;br /&gt;End Sub", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"JSON object to deserialize from","valuetype":"JsonObject","filenamebase":"source_ValuedElement","fqnprefix":"VoltScriptJSONConverterJsonScalarConverterfromJson","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;JSON object to deserialize from&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"JSON object to deserialize from","inlinecomment":" \t &apos; JSON object to deserialize from"}]},{"label":"isReturnObj","comment":"Overridden function, always returning False for this Class","valuetype":"Boolean","filenamebase":"isReturnObj_Method","fqnprefix":"VoltScriptJSONConverter.JsonScalarConverter","qn":"isReturnObj","codesample":"%REM\nThe actual code for this function\n%END REM\nFunction isReturnObj As Boolean\n    isReturnObj = False\nEnd Function","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"()","signature":"Public Function isReturnObj() As Boolean","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overridden function, always returning False for this Class&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overridden function, always returning False for this Class","inlinecomment":" \t &apos; Overridden function, always returning False for this Class","parentclassname":"JsonScalarConverter","codesamplehtml":"%REM&lt;br /&gt;The actual code for this function&lt;br /&gt;%END REM&lt;br /&gt;Function isReturnObj As Boolean&lt;br /&gt;    isReturnObj = False&lt;br /&gt;End Function", "signatureelements":["Public","Function"]},{"label":"toJson","comment":"Overridden function. The toJson method is called from AbstractJsonConverter&amp;apos;s serialize method.","valuetype":"Variant","filenamebase":"toJson_Method","fqnprefix":"VoltScriptJSONConverter.JsonScalarConverter","qn":"toJson","codesample":"%REM\nThe following code is an abbreviated version of code in AbstractJsonConverter.serialize. It extracts a property value, passes it to the derived class&amp;apos;s toJson function and passes the result to AbstractJsonConverter.serializeToProperty\n%END REM\nSub serialize(source as Variant, target as JsonObject)\n    Dim propName as String\n    Dim execString as String\n    propName = Me.labelName\n    Set samsaraObj = source\n    execString = |If (isObject(samsaraObj.| &amp;amp; propName &amp;amp; |)) Then\n        Set samsaraVal = samsaraObj.| &amp;amp; propName &amp;amp; |\n    Else\n        samsaraVal = samsaraObj.| &amp;amp; propName &amp;amp; |\n    End If|\n    Call serializeToProperty(toJson(samsaraVal), target)\nEnd Sub","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(source As Variant)","signature":"Public Function toJson(source As Variant) As Variant","modifiers":"Public","commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Overridden function. The toJson method is called from AbstractJsonConverter&amp;apos;s serialize method.&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Overridden function. The toJson method is called from AbstractJsonConverter&amp;apos;s serialize method.","inlinecomment":" \t &apos; Overridden function. The toJson method is called from AbstractJsonConverter&amp;apos;s serialize method.","parentclassname":"JsonScalarConverter","codesamplehtml":"%REM&lt;br /&gt;The following code is an abbreviated version of code in AbstractJsonConverter.serialize. It extracts a property value, passes it to the derived class&amp;apos;s toJson function and passes the result to AbstractJsonConverter.serializeToProperty&lt;br /&gt;%END REM&lt;br /&gt;Sub serialize(source as Variant, target as JsonObject)&lt;br /&gt;    Dim propName as String&lt;br /&gt;    Dim execString as String&lt;br /&gt;    propName = Me.labelName&lt;br /&gt;    Set samsaraObj = source&lt;br /&gt;    execString = |If (isObject(samsaraObj.| &amp;amp; propName &amp;amp; |)) Then&lt;br /&gt;        Set samsaraVal = samsaraObj.| &amp;amp; propName &amp;amp; |&lt;br /&gt;    Else&lt;br /&gt;        samsaraVal = samsaraObj.| &amp;amp; propName &amp;amp; |&lt;br /&gt;    End If|&lt;br /&gt;    Call serializeToProperty(toJson(samsaraVal), target)&lt;br /&gt;End Sub", "signatureelements":["Public","Function"], "arguments":[{"label":"source","comment":"Variant containing the property to be serialized","valuetype":"Variant","filenamebase":"source_ValuedElement","fqnprefix":"VoltScriptJSONConverterJsonScalarConvertertoJson","qn":"source","argumentindex":1,"commentblock":"&lt;div class=&quot;description&quot;&gt;\t&lt;ul class=&quot;blockList&quot;&gt;\t\t&lt;li class=&quot;blockList&quot;&gt;\t\t\t&lt;div class=&quot;comments&quot;&gt;&lt;!-- comment --&gt;&lt;pre&gt;Variant containing the property to be serialized&lt;/pre&gt;&lt;/div&gt;\t\t\t&lt;hr /&gt;\t\t&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;","commenthtml":"Variant containing the property to be serialized","inlinecomment":" \t &apos; Variant containing the property to be serialized"}]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptJSONConverter.JsonScalarConverter","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"JsonScalarConverter","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
