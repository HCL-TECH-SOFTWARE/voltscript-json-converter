{"classname":"ConverterParam","comment":"Class to hold details from which to extract a parameter for a setter or constructor.","containerclasstype":"","filenamebase":"ConverterParam_ObjectClass","fqnprefix":"VoltScriptJSONConverter.VoltScriptJSONConverter","qn":"ConverterParam","codesample":"%REM\nAdds a ConverterParam to retrieve an element from the current JSON object for the labelName passed, falling back to a defaultValue passed.\nThis is an abbreviated version of code in JsonCustomConstructor.withParam\n%END REM\nFunction withParam(labelName as String, defaultValue as Variant) as JsonCustomConstructor\n    Call redimParams()\n    Set Me.params(UBound(params)) = new ConverterParam(&amp;quot;JSON&amp;quot;, labelName, defaultValue)\n    Return Me\nEnd Function","signaturecode":1024,"instancecode":1024,"classtype":"Base","projectid":"086680CD3A1F050280258935003E6DFD","version":3,"classid":"6763DEA73B35F96880258935003EC469","signature":"Class ConverterParam","modifiers":"","classname":"ConverterParam","parentclassname":"None","constructorsignature":"Sub New(paramType As String, label As String, defaultValue As Variant)","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Class to hold details from which to extract a parameter for a setter or constructor.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Class to hold details from which to extract a parameter for a setter or constructor.","inlinecomment":" \t &amp;apos; Class to hold details from which to extract a parameter for a setter or constructor.","codesamplehtml":"%REM&amp;lt;br /&amp;gt;Adds a ConverterParam to retrieve an element from the current JSON object for the labelName passed, falling back to a defaultValue passed.&amp;lt;br /&amp;gt;This is an abbreviated version of code in JsonCustomConstructor.withParam&amp;lt;br /&amp;gt;%END REM&amp;lt;br /&amp;gt;Function withParam(labelName as String, defaultValue as Variant) as JsonCustomConstructor&amp;lt;br /&amp;gt;    Call redimParams()&amp;lt;br /&amp;gt;    Set Me.params(UBound(params)) = new ConverterParam(&amp;quot;JSON&amp;quot;, labelName, defaultValue)&amp;lt;br /&amp;gt;    Return Me&amp;lt;br /&amp;gt;End Function", "methods":[{"label":"label","comment":"Label in the relevant JSON object from which to extract the value.","valuetype":"String","filenamebase":"label_Method","fqnprefix":"VoltScriptJSONConverter.VoltScriptJSONConverter.ConverterParam","qn":"Set.label","codesample":"","signaturecode":260,"instancecode":256,"signature":"Property Set label As String","modifiers":"Set","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Label in the relevant JSON object from which to extract the value.&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Label in the relevant JSON object from which to extract the value.","inlinecomment":" \t &amp;apos; Label in the relevant JSON object from which to extract the value.","parentclassname":"ConverterParam","codesamplehtml":"", "signatureelements":["Property","Set"]},{"label":"New","comment":"Constructor","containerclasstype":"","filenamebase":"New_Method","fqnprefix":"VoltScriptJSONConverter.VoltScriptJSONConverter.ConverterParam","qn":"New","codesample":"","signaturecode":32,"instancecode":32,"f_returnsobject":0,"signature":"Sub New(paramType As String, label As String, defaultValue As Variant)","modifiers":"","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Constructor&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Constructor","inlinecomment":" \t &amp;apos; Constructor","parentclassname":"ConverterParam","codesamplehtml":"", "signatureelements":["Sub"], "arguments":[{"label":"paramType","comment":"&amp;quot;ScalarValue&amp;quot; (only relevant to setters), &amp;quot;JSON&amp;quot; (only relevant to constructors), &amp;quot;Parent&amp;quot; (only relevant to setters, used to get siblings), &amp;quot;Literal&amp;quot;","valuetype":"String","filenamebase":"paramType_ValuedElement","fqnprefix":"VoltScriptJSONConverterVoltScriptJSONConverterConverterParamNew","qn":"paramType","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;&amp;quot;ScalarValue&amp;quot; (only relevant to setters), &amp;quot;JSON&amp;quot; (only relevant to constructors), &amp;quot;Parent&amp;quot; (only relevant to setters, used to get siblings), &amp;quot;Literal&amp;quot;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"&amp;quot;ScalarValue&amp;quot; (only relevant to setters), &amp;quot;JSON&amp;quot; (only relevant to constructors), &amp;quot;Parent&amp;quot; (only relevant to setters, used to get siblings), &amp;quot;Literal&amp;quot;","inlinecomment":" \t &amp;apos; &amp;quot;ScalarValue&amp;quot; (only relevant to setters), &amp;quot;JSON&amp;quot; (only relevant to constructors), &amp;quot;Parent&amp;quot; (only relevant to setters, used to get siblings), &amp;quot;Literal&amp;quot;"},{"label":"label","comment":"Label in the relevant JSON object from which to extract a value","valuetype":"String","filenamebase":"label_ValuedElement","fqnprefix":"VoltScriptJSONConverterVoltScriptJSONConverterConverterParamNew","qn":"label","argumentindex":2,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Label in the relevant JSON object from which to extract a value&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Label in the relevant JSON object from which to extract a value","inlinecomment":" \t &amp;apos; Label in the relevant JSON object from which to extract a value"},{"label":"defaultValue","comment":"Default to use if label is not found","valuetype":"Variant","filenamebase":"defaultValue_ValuedElement","fqnprefix":"VoltScriptJSONConverterVoltScriptJSONConverterConverterParamNew","qn":"defaultValue","argumentindex":3,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Default to use if label is not found&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Default to use if label is not found","inlinecomment":" \t &amp;apos; Default to use if label is not found"}]},{"label":"paramType","comment":"Parameter type, &amp;quot;ScalarValue&amp;quot;, &amp;quot;JSON&amp;quot;, &amp;quot;Parent&amp;quot;, or &amp;quot;Literal&amp;quot;","valuetype":"String","filenamebase":"paramType_Method","fqnprefix":"VoltScriptJSONConverter.VoltScriptJSONConverter.ConverterParam","qn":"Set.paramType","codesample":"","signaturecode":260,"instancecode":256,"signature":"Property Set paramType As String","modifiers":"Set","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Parameter type, &amp;quot;ScalarValue&amp;quot;, &amp;quot;JSON&amp;quot;, &amp;quot;Parent&amp;quot;, or &amp;quot;Literal&amp;quot;&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Parameter type, &amp;quot;ScalarValue&amp;quot;, &amp;quot;JSON&amp;quot;, &amp;quot;Parent&amp;quot;, or &amp;quot;Literal&amp;quot;","inlinecomment":" \t &amp;apos; Parameter type, &amp;quot;ScalarValue&amp;quot;, &amp;quot;JSON&amp;quot;, &amp;quot;Parent&amp;quot;, or &amp;quot;Literal&amp;quot;","parentclassname":"ConverterParam","codesamplehtml":"", "signatureelements":["Property","Set"]}], "variables":[{"label":"value","comment":"","valuetype":"Variant","filenamebase":"value_Variable","fqnprefix":"VoltScriptJSONConverter.VoltScriptJSONConverter.ConverterParam","qn":"value","codesample":"","signaturecode":2064,"instancecode":16,"f_returnsobject":1,"signature":"Public value As Variant","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"ConverterParam","codesamplehtml":"", "attributes":["Public"], "signatureelements":["Public"]}]}
