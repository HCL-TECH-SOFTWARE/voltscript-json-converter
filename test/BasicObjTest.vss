%REM
	Copyright 2022-2023 HCL America, Inc.
	Licensed under the Apache License, Version 2.0 (the "License"); 
	you may not use this file except in compliance with the License. 
	You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, 
	software distributed under the License is distributed on an "AS IS" BASIS, 
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
	See the License for the specific language governing permissions and limitations under the License	
%END REM

Option Public
Option Declare
Use "../src/VoltScriptJsonConverter"
Use "../libs/VoltScriptTesting"
'Runs through addCustomConverter,fromJsonString,asNoArgsObject,createNoArgsObject,resetGlobals,fromJson,
'getCustomConverter,SamsaraScalarConverter

Class ObjectSummary

    Public unid as String
    Public modified as String
    Public action as String

End Class

Function runZuluTest as Boolean

    Dim testRunner as New TestRunner("Object Class Conversion")
    Dim helper as new JsonConversionHelper
    Dim obj as ObjectSummary
    Dim json as String
    Dim result as Boolean
    Call testRunner.setOutputFormat("BOTH")

	json = |{"unid":"12345678901234567890123456789012","modified":"2022-02-02T02:02:22Z","action":"modified"}|
    
    Try
        Dim deserializeSuite as New TestSuite("Test Object Class deserialization")
        Call testRunner.addTestSuite(deserializeSuite)
        Call deserializeSuite.describe("Deserialization")
        Set obj = helper.fromJsonString(json, "ObjectSummary", "BasicObjTest")
        call deserializeSuite.addResult(True, "")
        Call testDeserializationZ(deserializeSuite, obj)
    Catch
        Call deserializeSuite.addError("Error deserializing JSON: " & Error() & " on line " & Erl, ||)
        print "Error " & Error() & " on line " & Erl
    Finally
        result = deserializeSuite.ranSuccessfully()
    end Try

    Dim jsonObj as JsonObject
    If Not (obj is Nothing) Then
        Dim serializeSuite as New TestSuite("Test Object Summary Class serialization")
        Call testRunner.addTestSuite(serializeSuite)
        Try
            ' Test serialization again
            'Call helper.enableDebug()
            Call helper.withScalarConverter("action").withScalarConverter("unid").withScalarConverter("modified")   'modified already added to helper
            Set jsonObj = helper.toJson(obj)
            Call testSerializationZ(serializeSuite, jsonObj)
        Catch
            Call serializeSuite.addError("Error serializing to JSON: " & Error() & " on line " & Erl, ||)
            print "Error " & Error() & " on line " & Erl
        Finally
            result = result And serializeSuite.ranSuccessfully()
        end Try
    End If

    Return result
End Function

Function testDeserializationZ(testSuite as TestSuite, testObj as ObjectSummary)

    On Error GoTo logErr

    Call testSuite.describe("Test unid").assertEqualsString("12345678901234567890123456789012", testObj.unid, false)
    Call testSuite.describe("Test action").assertEqualsString("modified", testObj.action, false)
    Call testSuite.describe("Test modified").assertEqualsString("2022-02-02T02:02:22Z", testObj.modified, true)

getOut:
    Exit Function

logErr:
    Call testSuite.addError(|Error | & Error() & |(| & Err() & |) on line | & CStr(Erl), ||)
	Resume Next

End Function

Function testSerializationZ(testSuite as TestSuite, jsonObj as JsonObject)

    Dim returnJson as String
    returnJson = |{"action":"modified","modified":"2022-02-02T02:02:22Z","unid":"12345678901234567890123456789012"}|

    Call testSuite.describe("Test unid").assertEqualsString("12345678901234567890123456789012", CStr(jsonObj.getChild("unid").scalarValue), false)
    Call testSuite.describe("Test action").assertEqualsString("modified", CStr(jsonObj.getChild("action").scalarValue), false)
    Call testSuite.describe("Test modified").assertEqualsString("2022-02-02T02:02:22Z", CStr(jsonObj.getChild("modified").scalarValue), true)
    Call testSuite.describe("Test string").assertEqualsString(returnJson, jsonObj.toString(false), false)

End Function